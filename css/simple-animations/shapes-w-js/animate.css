html{
	font-family: sans-serif;
}

/*
http://www.webdesignerdepot.com/2014/05/8-simple-css3-transitions-that-will-wow-your-users/"
*/

a{
	text-decoration: none;
}

div{
	font-weight:600;
	font-size:48px;
	color: white;
	width:484px;
	height:200px;
	background: #009688;
	transition: all 2s ease;
	text-align:center;
	line-height:200px;
	margin-bottom:15px;
}


/* transition: <property> <duration> <timing-function> <delay>;

/* you can declare transition properties and their durations and so forth in the base element, and in the pseudo-selector, you can specify what actually changes


i.e.
.box{
	background-color: red;
	-webkit-transition: background-color 2s, -webkit-transform 2s;
}

.box.active:hover{
	background-color: blue;
	-webkit-transform: rotate(180deg);
}
*/

/* when listing multiple transitions
if you have more transition properties than transition durations listed or vice-versa, the excess ones are truncated,*/

/* setting line height equal to parent element height to make it text centered*/



.fade-in{
	opacity: .3;
}

.fade-in.active.active:hover{
	opacity: 1;
}

.fade-out{
	opacity: 1;
}

.fade-out.active:hover{
	opacity: .3;
}

.bg-color-change.active:hover{
	background-color: #FFC107;
}

.shrinkable.active:hover{
	-webkit-transform: scale(.75);
	-ms-transform: scale(.75);
	-moz-transform: scale(.75);
	-transform: scale(.75);	
}

/* webkit is for safari, chrome, opera*/
/* ms is for IE */
/* moz is for mozilla*/
/* opera may actually use -o instead*/


.expandable.active:hover{
	-webkit-transform: scale(1.25);
	-ms-transform: scale(1.25);
	-moz-transform: scale(1.25);
	-transform: scale(1.25);	
}

/*delay example

#delay1{
	transition-property: font-size;
	transition-duration: 4s;
	transition-delay: 2s;
	font-size:14px;
}

#delay1.active:hover{
	transition-property: font-size;
	transition-duration: 4s;
	transition-delay: 2s;
	font-size:36px;
}

this example performs a 4s with a 2s delay between mouse over and beginning of animation
*/

.rotate.active:hover{
	transition-property: -webkit-transform;
	transition-duration: 2.5s;
	transition-delay: 1s;
	-webkit-transform: rotate(360deg);
}


/*
	for multiple 2d transforms, you do NOT need to separate the transforms by commas

	i.e.
	.shrinkwheel.active:hover{
		background-color: #FFC107;
		-webkit-transform: scale(.25) rotate(360deg);
	}
*/
.rotink.active:hover{
	background-color: #FFC107;
	transition-delay: 1.2s;
	-webkit-transform: scale(.25) rotate(360deg);
}

.box-circle.active:hover{
	border-radius: 50%;
	height: 342px;
	width: 342px;
	-webkit-transform: ;
}

.circle.active:hover{
	border-radius: 50%;
	height: 150px;
	width:150px;
	animation: bounce 3s ease-in 2s;
}

/* when defining a custom animation, you need to have it defined for each browser type.

so have an @-moz-keyframes aniName
@-webkit keyframes aniName

for your actual dom element, you simply have a css animation property like - animation: bounce 1.2s ease;
*/
@-webkit-keyframes  bounce{
	0% {
		transform: translateY(0%);
	}

	10% {
		transform:
			translateY(10%);
			background-color: #FFC107;
	}
	20% {
		transform:
			translateY(-10%);
		background: #009688;
	}

	30% {
		transform:
			translateY(10%);
		background-color: #FFC107;
	}

	40% {
		transform:
			translateY(-10%);
		background: #009688;
	}

	50% {
		transform:
			translateY(10%);
		background-color: #FFC107;
	}

	60% {
		transform:
			translateY(-10%);
		background: #009688;
	}

	70% {
		transform:
			translateY(10%);
		background-color: #FFC107;
	}

	80% {
		transform: 
			translateY(-10%);
		background: #009688;
	}

	90% {
		transform:
			translateY(10%);
		background-color: #FFC107;
	}

	100% {
		transform: translateY(0%);
		background: #009688;
	}
}

/*
 you can make animations happen multiple times by specifying the number of iterations

 i.e.
 	swing.active:hover{
 		-webkit-animation: swing 1s ease;
 		animation: swing 1s ease;
 		-webkit-animation-iteration-count: 1;
 		animation-iteration-count: 1;
 	}
*/

/*
	for box shadows, the 5 base properties are 
	box-shadow: type x-offset(unit) y-offset(unit) blur-radius(unit) spread-radius) color;
*/
.frame.active:hover{
	box-shadow: inset 0 0 0 25px #FFECB3;
}



